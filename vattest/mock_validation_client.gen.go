// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/creativefabrica/vat (interfaces: ValidationClient)
//
// Generated by this command:
//
//	mockgen -destination=vattest/mock_validation_client.gen.go -package=vattest github.com/creativefabrica/vat ValidationClient
//

// Package vattest is a generated GoMock package.
package vattest

import (
	context "context"
	reflect "reflect"

	vat "github.com/creativefabrica/vat"
	gomock "go.uber.org/mock/gomock"
)

// MockValidationClient is a mock of ValidationClient interface.
type MockValidationClient struct {
	ctrl     *gomock.Controller
	recorder *MockValidationClientMockRecorder
	isgomock struct{}
}

// MockValidationClientMockRecorder is the mock recorder for MockValidationClient.
type MockValidationClientMockRecorder struct {
	mock *MockValidationClient
}

// NewMockValidationClient creates a new mock instance.
func NewMockValidationClient(ctrl *gomock.Controller) *MockValidationClient {
	mock := &MockValidationClient{ctrl: ctrl}
	mock.recorder = &MockValidationClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockValidationClient) EXPECT() *MockValidationClientMockRecorder {
	return m.recorder
}

// Validate mocks base method.
func (m *MockValidationClient) Validate(ctx context.Context, id vat.IDNumber) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Validate", ctx, id)
	ret0, _ := ret[0].(error)
	return ret0
}

// Validate indicates an expected call of Validate.
func (mr *MockValidationClientMockRecorder) Validate(ctx, id any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Validate", reflect.TypeOf((*MockValidationClient)(nil).Validate), ctx, id)
}
