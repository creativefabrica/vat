// Code generated by mockery; DO NOT EDIT.
// github.com/vektra/mockery
// template: testify

package vattest

import (
	"context"

	"github.com/creativefabrica/vat"
	mock "github.com/stretchr/testify/mock"
)

// NewMockValidationClient creates a new instance of MockValidationClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockValidationClient(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockValidationClient {
	mock := &MockValidationClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

// MockValidationClient is an autogenerated mock type for the ValidationClient type
type MockValidationClient struct {
	mock.Mock
}

type MockValidationClient_Expecter struct {
	mock *mock.Mock
}

func (_m *MockValidationClient) EXPECT() *MockValidationClient_Expecter {
	return &MockValidationClient_Expecter{mock: &_m.Mock}
}

// Validate provides a mock function for the type MockValidationClient
func (_mock *MockValidationClient) Validate(ctx context.Context, id vat.IDNumber) error {
	ret := _mock.Called(ctx, id)

	if len(ret) == 0 {
		panic("no return value specified for Validate")
	}

	var r0 error
	if returnFunc, ok := ret.Get(0).(func(context.Context, vat.IDNumber) error); ok {
		r0 = returnFunc(ctx, id)
	} else {
		r0 = ret.Error(0)
	}
	return r0
}

// MockValidationClient_Validate_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Validate'
type MockValidationClient_Validate_Call struct {
	*mock.Call
}

// Validate is a helper method to define mock.On call
//   - ctx
//   - id
func (_e *MockValidationClient_Expecter) Validate(ctx interface{}, id interface{}) *MockValidationClient_Validate_Call {
	return &MockValidationClient_Validate_Call{Call: _e.mock.On("Validate", ctx, id)}
}

func (_c *MockValidationClient_Validate_Call) Run(run func(ctx context.Context, id vat.IDNumber)) *MockValidationClient_Validate_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(vat.IDNumber))
	})
	return _c
}

func (_c *MockValidationClient_Validate_Call) Return(err error) *MockValidationClient_Validate_Call {
	_c.Call.Return(err)
	return _c
}

func (_c *MockValidationClient_Validate_Call) RunAndReturn(run func(ctx context.Context, id vat.IDNumber) error) *MockValidationClient_Validate_Call {
	_c.Call.Return(run)
	return _c
}
